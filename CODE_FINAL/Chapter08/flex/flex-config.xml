<?xml version="1.0" encoding="UTF-8"?>
<flex-config xmlns="http://www.adobe.com/2006/flex-config">

    <compiler>
        <!-- locations may be specified as a URL relative to the context root,
            a complete URL or an absolute file path -->

        <!-- list of CSS or SWC files to apply as a theme -->
        <theme>
            <filename>global.css</filename>
        </theme>

        <!-- generate accessible swfs -->
        <!-- query parameter override - ?accessible=true/?accessible is false;
                 this override is always available -->
        <accessible>false</accessible>

        <!-- Specifies the locale for internationalization. -->
        <!-- not set -->
        <!--
        <locale>en_US</locale>
        -->

        <!-- must be true in the webtier complier -->
        <allow-source-path-overlap>true</allow-source-path-overlap>

        <!-- generate swfs and swds for debugging -->
        <!-- query parameter override - ?debug=true/?debug=false -->
        <debug>false</debug>
        
        
        <!-- Keep the following AS3 metadata in the bytecodes.                                             -->
        <!-- Warning: For the data binding feature in the Flex framework to work properly,                 -->
        <!--          the following metadata must be kept:                                                 -->
        <!--          1. Bindable                                                                          -->
        <!--          2. Managed                                                                           -->
        <!--          3. ChangeEvent                                                                       -->
        <!--          4. NonCommittingChangeEvent                                                          -->
        <!--          5. Transient                                                                         -->
        <keep-as3-metadata>
          <name>Bindable</name>
          <name>Managed</name>
          <name>ChangeEvent</name>
          <name>NonCommittingChangeEvent</name>
          <name>Transient</name>
        </keep-as3-metadata>

        <!-- Run the AS3 compiler in strict error checking mode.
        strict must be 'false' when es is 'true'. -->
        <strict>true</strict>
        <!-- Run the compiler in AS3 compatibility mode. Either as3 or es should be true. -->
        <as3>true</as3>
        <!-- Run the compiler in ES compatibility mode -->
        <es>false</es>

        <!-- write xxx-generated.as file to disk -->
        <!-- These files are generated by the compiler during mxml translation. -->
        <keep-generated-actionscript>false</keep-generated-actionscript>

        <!-- Run the AS3 compiler in a mode that detects legal but potentially incorrect code  -->
        <show-actionscript-warnings>true</show-actionscript-warnings>

        <!-- Controls whether warnings are displayed when a deprecated API is used -->
        <show-deprecation-warnings>true</show-deprecation-warnings>

        <!-- When show-all-warnings is true, this value controls whether or not
                     binding warnings are shown. When show-all-warnings is false,
                     this value will have no effect. -->
        <!-- query parameter override - ?showBindingWarnings=true/?showBindingWarnings=false -->
        <show-binding-warnings>true</show-binding-warnings>

        <!-- shows additional information in the stack traces produced by the debug player -->
        <!-- when debug is true, this setting is ignored and the stack traces are always verbose -->
        <!-- query parameter override - ?verboseStacktraces=true/?verboseStacktraces=false -->
        <verbose-stacktraces>false</verbose-stacktraces>

        <!-- user-defined AS3 file encoding
        <actionscript-file-encoding></actionscript-file-encoding>
        -->

        <!-- list of path elements that form the roots of ActionScript class hierarchies -->
        <source-path>
            <path-element>./user_classes</path-element>
        </source-path>

        <!-- list of SWC files or directories that contain SWC files -->
        <library-path>
            <path-element>./user_classes</path-element>
            <path-element>./libs</path-element>
            <path-element>./locale/{locale}</path-element>
        </library-path>

        <!-- list of SWC files or directories to compile against but to omit from linking -->
        <external-library-path>
            <path-element>./libs/playerglobal.swc</path-element>
        </external-library-path>

        <!-- a list of libraries (SWCs) to completely include in the SWF -->
        <!--
        <include-libraries>
            <library>string</library>
            <library>string</library>
        </include-libraries>
        -->

        <!-- A list of runtime shared library URLs to be loaded before applications start. -->
        <!-- not set -->
        <!--
        <runtime-shared-libraries>
            <url>string</url>
            <url>string</url>
        </runtime-shared-libraries>
        -->

        <!-- Specify a URI to associate with a manifest of components for use as MXML elements -->
        <namespaces>
            <namespace>
                <uri>http://www.adobe.com/2006/mxml</uri>
                <manifest>mxml-manifest.xml</manifest>
            </namespace>
        </namespaces>

        <!-- Enable post-link SWF optimization. -->
        <optimize>true</optimize>

        <context-root>/flex</context-root>

        <!--
             When headless-server is true, the system property java.awt.headless will be set to true.
             This should be used with JDK 1.4+ on servers without graphics cards and
             monitors.  Otherwise, the property is not set.
        -->
        <headless-server>false</headless-server>

        <fonts>
	        <!-- Enables FlashType for embedded fonts, which provides greater clarity for small -->
		    <!-- fonts.  This setting can be overriden in CSS for specific fonts. -->
		    <flash-type>true</flash-type> 
            <!-- The number of embedded font faces that are cached -->
            <max-cached-fonts>20</max-cached-fonts>
            <!-- The number of character glyph outlines to cache for each font face -->
            <max-glyphs-per-face>1000</max-glyphs-per-face>
            <!-- Defines ranges that can be used across multiple font-face declarations. -->
            <!-- See flash-unicode-table.xml for more examples.  -->
            <!-- not set -->
            <!--
            <languages>
               <language-range>
                  <lang>englishRange</lang>
                  <range>U+0020-U+007E</range>
               </language-range>
            </languages>
             -->
            <!-- Compiler font manager classes, in policy resolution order-->
            <managers>
               <manager-class>flash.fonts.JREFontManager</manager-class>
               <manager-class>flash.fonts.BatikFontManager</manager-class>
            </managers>

            <!-- File containing cached system font licensing information
                 produced via 
                   java -cp mxmlc.jar flex2.tools.FontSnapshot (fontpath)
                 Will default to winFonts.ser on Windows XP and
                 macFonts.ser on Mac OS X, so is commented out by default.

              <local-fonts-snapshot>localFonts.ser</local-fonts-snapshot>
            -->
        </fonts>

        <!-- enable the following warnings on an individual basis -->
        <!-- Array.toString() format has changed. -->
        <warn-array-tostring-changes>false</warn-array-tostring-changes>
        <!-- Assignment within conditional. -->
        <warn-assignment-within-conditional>true</warn-assignment-within-conditional>
        <!-- Possibly invalid Array cast operation. -->
        <warn-bad-array-cast>true</warn-bad-array-cast>
        <!-- Non-Boolean value used where a Boolean value was expected. -->
        <warn-bad-bool-assignment>true</warn-bad-bool-assignment>
        <!-- Invalid Date cast operation. -->
        <warn-bad-date-cast>true</warn-bad-date-cast>
        <!-- Unknown method. -->
        <warn-bad-es3-type-method>true</warn-bad-es3-type-method>
        <!-- Unknown property. -->
        <warn-bad-es3-type-prop>true</warn-bad-es3-type-prop>
        <!-- Illogical comparison with NaN. Any comparison operation involving NaN will evaluate to false because NaN != NaN. -->
        <warn-bad-nan-comparison>true</warn-bad-nan-comparison>
        <!-- Impossible assignment to null. -->
        <warn-bad-null-assignment>true</warn-bad-null-assignment>
        <!-- Illogical comparison with null. -->
        <warn-bad-null-comparison>true</warn-bad-null-comparison>
        <!-- Illogical comparison with undefined.  Only untyped variables (or variables of type *) can be undefined. -->
        <warn-bad-undefined-comparison>true</warn-bad-undefined-comparison>
        <!-- Boolean() with no arguments returns false in ActionScript 3.0.  Boolean() returned undefined in ActionScript 2.0. -->
        <warn-boolean-constructor-with-no-args>false</warn-boolean-constructor-with-no-args>
        <!-- __resolve is no longer supported. -->
        <warn-changes-in-resolve>false</warn-changes-in-resolve>
        <!-- Class is sealed.  It cannot have members added to it dynamically. -->
        <warn-class-is-sealed>false</warn-class-is-sealed>
        <!-- Constant not initialized. -->
        <warn-const-not-initialized>true</warn-const-not-initialized>
        <!-- Function used in new expression returns a value.  Result will be what the -->
        <!-- function returns, rather than a new instance of that function.            -->
        <warn-constructor-returns-value>false</warn-constructor-returns-value>
        <!-- EventHandler was not added as a listener. -->
        <warn-deprecated-event-handler-error>false</warn-deprecated-event-handler-error>
        <!-- Unsupported ActionScript 2.0 function. -->
        <warn-deprecated-function-error>false</warn-deprecated-function-error>
        <!-- Unsupported ActionScript 2.0 property. -->
        <warn-deprecated-property-error>false</warn-deprecated-property-error>
        <!-- More than one argument by the same name. -->
        <warn-duplicate-argument-names>true</warn-duplicate-argument-names>
        <!-- Duplicate variable definition -->
        <warn-duplicate-variable-def>true</warn-duplicate-variable-def>
        <!-- ActionScript 3.0 iterates over an object's properties within a "for x in target" statement in random order. -->
        <warn-for-var-in-changes>false</warn-for-var-in-changes>
        <!-- Importing a package by the same name as the current class will hide that class identifier in this scope. -->
        <warn-import-hides-class>true</warn-import-hides-class>
        <!-- Use of the instanceof operator. -->
        <warn-instance-of-changes>true</warn-instance-of-changes>
        <!-- Internal error in compiler. -->
        <warn-internal-error>true</warn-internal-error>
        <!-- _level is no longer supported. For more information, see the flash.display package. -->
        <warn-level-not-supported>false</warn-level-not-supported>
        <!-- Missing namespace declaration (e.g. variable is not defined to be public, private, etc.). -->
        <warn-missing-namespace-decl>true</warn-missing-namespace-decl>
        <!-- Negative value will become a large positive value when assigned to a uint data type. -->
        <warn-negative-uint-literal>true</warn-negative-uint-literal>
        <!-- Missing constructor. -->
        <warn-no-constructor>false</warn-no-constructor>
        <!-- The super() statement was not called within the constructor. -->
        <warn-no-explicit-super-call-in-constructor>false</warn-no-explicit-super-call-in-constructor>
        <!-- Missing type declaration. -->
        <warn-no-type-decl>true</warn-no-type-decl>
        <!-- In ActionScript 3.0, white space is ignored and '' returns 0. Number() returns -->
        <!-- NaN in ActionScript 2.0 when the parameter is '' or contains white space.      -->
        <warn-number-from-string-changes>false</warn-number-from-string-changes>
        <!-- Change in scoping for the this keyword.  Class methods extracted from an -->
        <!-- instance of a class will always resolve this back to that instance.  In  -->
        <!-- ActionScript 2.0 this is looked up dynamically based on where the method -->
        <!-- is invoked from.                                                         -->
        <warn-scoping-change-in-this>false</warn-scoping-change-in-this>
        <!-- Inefficient use of += on a TextField.-->
        <warn-slow-text-field-addition>true</warn-slow-text-field-addition>
        <!-- Possible missing parentheses. -->
        <warn-unlikely-function-value>true</warn-unlikely-function-value>
        <!-- Possible usage of the ActionScript 2.0 XML class. -->
        <warn-xml-class-has-changed>false</warn-xml-class-has-changed>
   </compiler>

    <!-- Metadata added to SWFs via the SWF Metadata tag. -->
    <metadata>
    <title>Adobe Flex 2 Application</title>
        <description>http://www.adobe.com/products/flex</description>
        <publisher>unknown</publisher>
        <creator>unknown</creator>
        <language>EN</language>
    </metadata>
    
</flex-config>
